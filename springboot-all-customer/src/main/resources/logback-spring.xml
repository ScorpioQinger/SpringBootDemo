<?xml version="1.0" encoding="UTF-8" ?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <property name="PATTERN" value="%d{YYYY-MM-dd HH:mm:ss.SSS} %-5level ---[%thread] %logger{36}: %msg%n"/>
    <property name="PATTERNFILE" value="%d %-5level [%thread] %logger{36} %line - %msg%n"/>
    <!--<property name="logback.logdir" value="SpringBootDemo/springboot-all-customer/log"/>-->
    <!--<property name="logback.appname" value="customerApplication"/>-->
    <!--application.properties传递的参数不能用logback自带的<property>标签-->
    <springProperty name="LOGDIR" scope="context" source="logback.logdir"/>
    <springProperty name="LOGAPPNAME" scope="context" source="logback.appname"/>

    <!--设置上下文名称-->
    <contextName>logger-spring</contextName>

    <!--输出到控制台-->
    <appender name="consoleLog1" class="ch.qos.logback.core.ConsoleAppender">
        <!--展示格式-->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>${PATTERN}</pattern>
        </layout>
    </appender>

    <!--RollingFileAppender滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件-->
    <appender name="fileInfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--需求：只想输出INFO级别的日志-->
        <!--分析：如果只想要INFO级别的日志，之过滤INFO，ERROR还是会出现因为ERROR的优先级高于INFO（ALL<TRACE<DEBUG<INFO<WARN<ERROR<FATAL<OFF）-->
        <!--     所以需要使用级别过滤器(LevelFilter)，如下：-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!--设置过滤级别-->
            <level>INFO</level>
            <!--用于配置符合过滤条件的操作-->
            <onMatch>ACCEPT</onMatch>
            <!--用于配置不符合过滤条件的操作-->
            <onMismatch>DENY</onMismatch>
        </filter>
        <!--被写入的文件名，可以是相对目录，也可以是绝对目录，如果上级目录不存在会自动创建，没有默认值。-->
        <File>${LOGDIR}/info.${LOGAPPNAME}.log</File>
        <!--如果是 true，日志被追加到文件结尾，如果是 false，清空现存文件，默认是true-->
        <append>true</append>
        <!--当发生滚动时，决定RollingFileAppender的行为，涉及文件移动和重命名。属性class定义具体的滚动策略类，按照时间滚动 TimeBaseRollingPolicy-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--文件路径，定义了日志的切分方式即把每天的日志归档在一个文件中，以防止日志填满整个磁盘-->
            <FileNamePattern>${LOGDIR}/info.${LOGAPPNAME}.%d{yyyy-MM-dd}.log</FileNamePattern>
            <!--只保留最近90天的日志-->
            <maxHistory>90</maxHistory>
            <!--指定日志文件上限的大小，到了这个值就会自动删除旧日志-->
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>${PATTERNFILE}</pattern>
        </encoder>
    </appender>

    <appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--临界值过滤器（ThresholdFilter），过滤掉指定临界值的日志，当日级别高于或者等于临界值时，过滤器返回NEUTRAL；当日志级别低于临界值时，日志会被拒绝-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <File>${LOGDIR}/error.${LOGAPPNAME}.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOGDIR}/error.${LOGAPPNAME}.%d{yyyy-MM-dd}.log</FileNamePattern>
            <maxHistory>90</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>${PATTERNFILE}</pattern>
        </encoder>
    </appender>

    <logger name="com.zq.springboot.controlle" level="info" additivity="false">
        <appender-ref ref="fileInfoLog"/>
    </logger>

    <!--指定最基本的日志输出级别-->
    <root level="DEBUG">
        <!--appender会添加到这个loger-->
        <appender-ref ref="fileInfoLog"/>
    </root>

</configuration>